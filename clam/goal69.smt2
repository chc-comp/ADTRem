; Automatically generated by map2smt

(set-logic HORN)

(declare-datatypes ((listOfInt 0) )
(((conslistOfInt (headlistOfInt Int) (taillistOfInt listOfInt)) (nillistOfInt))))



(declare-fun sort (listOfInt listOfInt) Bool)
(declare-fun insort (Int listOfInt listOfInt) Bool)
(declare-fun less (Int Int Bool) Bool)
(declare-fun leq (Int Int Bool) Bool)
(declare-fun map_not (Bool Bool) Bool)
(declare-fun mem (Int listOfInt Bool) Bool)
(declare-fun ff () Bool)

(assert
    (sort nillistOfInt nillistOfInt)
)
(assert
  (forall ( (A Int) (B listOfInt) (C listOfInt) (D listOfInt) )
    (=>
      (and
        (sort B D)
        (insort A D C)
      )
      (sort (conslistOfInt A B) C)
    )
  )
)
(assert
  (forall ( (A Int) )
    (insort A nillistOfInt (conslistOfInt A nillistOfInt))
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) )
    (=>
      (<= A (- B 1))
      (insort A (conslistOfInt B C) (conslistOfInt A (conslistOfInt B C)))
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D listOfInt) )
    (=>
      (and
        (>= A B)
        (insort A C D)
      )
      (insort A (conslistOfInt B C) (conslistOfInt B D))
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) )
    (=>
      (and
        (= B false)
        (= A true)
      )
      (map_not A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) )
    (=>
      (and
        (= B true)
        (= A false)
      )
      (map_not A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (= B false)
      (mem A nillistOfInt B)
    )
  )
)
(assert
  (forall ( (A Int) (B listOfInt) (C Bool) )
    (=>
      (= C true)
      (mem A (conslistOfInt A B) C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D Bool) )
    (=>
      (and
        (= D true)
        (mem A C D)
      )
      (mem A (conslistOfInt B C) D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D Bool) )
    (=>
      (and
        (= D false)
        (>= (- B A) 1)
        (mem A C D)
      )
      (mem A (conslistOfInt B C) D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D Bool) )
    (=>
      (and
        (= D false)
        (<= (- B A) (- 1))
        (mem A C D)
      )
      (mem A (conslistOfInt B C) D)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F listOfInt) (G listOfInt) )
    (=>
      (and
        (= A true)
        (= B false)
        (= C 0)
        (>= (- D E) 1)
        (mem E F B)
        (mem E G A)
        (insort D F G)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F listOfInt) (G listOfInt) )
    (=>
      (and
        (= A true)
        (= B false)
        (= C 0)
        (<= (- D E) (- 1))
        (mem E F B)
        (mem E G A)
        (insort D F G)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
