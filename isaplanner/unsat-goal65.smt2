; Automatically generated by map2smt

(set-logic HORN)

(declare-datatypes ((listOfInt 0) )
(((conslistOfInt (headlistOfInt Int) (taillistOfInt listOfInt)) (nillistOfInt))))



(declare-fun adt_new1 (listOfInt Bool) Bool)
(declare-fun filter (listOfInt listOfInt) Bool)
(declare-fun leq (Int Int Bool) Bool)
(declare-fun last (listOfInt Int) Bool)
(declare-fun append (listOfInt listOfInt listOfInt) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B listOfInt) (C Bool) )
    (=>
      (= C false)
      (adt_new1 (conslistOfInt A B) C)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (adt_new1 nillistOfInt A)
    )
  )
)
(assert
    (filter nillistOfInt nillistOfInt)
)
(assert
  (forall ( (A Int) )
    (last (conslistOfInt A nillistOfInt) A)
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D Int) )
    (=>
      (last (conslistOfInt B C) D)
      (last (conslistOfInt A (conslistOfInt B C)) D)
    )
  )
)
(assert
  (forall ( (A listOfInt) )
    (append nillistOfInt A A)
  )
)
(assert
  (forall ( (A Int) (B listOfInt) (C listOfInt) (D listOfInt) )
    (=>
      (append B C D)
      (append (conslistOfInt A B) C (conslistOfInt A D))
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C listOfInt) (D listOfInt) )
    (=>
      (and
        (= (- A B) 0)
        (append C (conslistOfInt A nillistOfInt) D)
        (last D B)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
